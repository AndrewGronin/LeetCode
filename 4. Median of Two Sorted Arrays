class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector<int> merged;//(nums1.size()+nums2.size());
        int i = 0,j = 0;
       // while(i < nums1.size() && j < nums2.size()){
        if (nums1.empty() ){
            merged = nums2;
        }else if(nums2.empty()){
            merged = nums1;
        }else{
        do{
            if (nums1[i] <= nums2[j]){
                merged.push_back(nums1[i]);
                i++;
            }else{
                merged.push_back(nums2[j]);
                j++;
            }
        }
        while(i < nums1.size() && j < nums2.size());
        
        while(i < nums1.size()){
            merged.push_back(nums1[i]);
                i++;
        }
        
         while(j < nums2.size()){
            merged.push_back(nums2[j]);
                j++;
        }
        }
        
    //for (auto i:merged){cout<<i<<" "<<merged.size();}
        if (merged.size() % 2 == 1){
            return merged[merged.size()/2];
        }else{
            double s = (merged[merged.size()/2]+merged[merged.size()/2-1])*0.5;
                return s;
        }
        
    }
};
