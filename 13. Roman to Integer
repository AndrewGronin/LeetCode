class Solution {
public:
    int romanToInt(string s) {
        int ans=0,i = 0;
        while(i < s.size()){
           if(s[i] == 'C' && s[i+1]=='D'){ans+=400;i++;i++;}else
            if(s[i] == 'C' && s[i+1]=='M'){ans+=900;i++;i++;}else
            if(s[i] == 'X' && s[i+1]=='L'){ans+=40;i++;i++;}else
            if(s[i] == 'X' && s[i+1]=='C'){ans+=90;i++;i++;}else
            if(s[i] == 'I' && s[i+1]=='V'){ans+=4;i++;i++;}else
            if(s[i] == 'I' && s[i+1]=='X'){ans+=9;i++;i++;}else
            if(s[i] == 'I'){ans+=1;i++;}else
            if(s[i] == 'V'){ans+=5;i++;}else
            if(s[i] == 'X'){ans+=10;i++;}else
            if(s[i] == 'L'){ans+=50;i++;}else
            if(s[i] == 'C'){ans+=100;i++;}else
            if(s[i] == 'D'){ans+=500;i++;}else
            if(s[i] == 'M'){ans+=1000;i++;}

            
        }
        return(ans);
    }
};

string stringToString(string input) {
    assert(input.length() >= 2);
    string result;
    for (int i = 1; i < input.length() -1; i++) {
        char currentChar = input[i];
        if (input[i] == '\\') {
            char nextChar = input[i+1];
            switch (nextChar) {
                case '\"': result.push_back('\"'); break;
                case '/' : result.push_back('/'); break;
                case '\\': result.push_back('\\'); break;
                case 'b' : result.push_back('\b'); break;
                case 'f' : result.push_back('\f'); break;
                case 'r' : result.push_back('\r'); break;
                case 'n' : result.push_back('\n'); break;
                case 't' : result.push_back('\t'); break;
                default: break;
            }
            i++;
        } else {
          result.push_back(currentChar);
        }
    }
    return result;
}

int main() {
    string line;
    while (getline(cin, line)) {
        string s = stringToString(line);
        
        int ret = Solution().romanToInt(s);

        string out = to_string(ret);
        cout << out << endl;
    }
    return 0;
}
